[tool.poetry]
name = "pdf-bot"
version = "1.0.0"
description = "Telegram bot that can do a lot of things related to PDF files."
authors = ["zeshuaro <zeshuaro@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
Babel = "2.12.1"
google-cloud-datastore = "2.16.0"
humanize = "4.7.0"
img2pdf = "0.4.4"
ocrmypdf = "14.3.0"
pdf2image = "==1.16.3"
"pdfminer.six" = "20221105"
python-telegram-bot = { extras = [
    "callback-data",
    "rate-limiter",
    "webhooks",
], version = "==20.3" }
Pillow = "==9.5.0"
requests = "2.31.0"
slack-sdk = "3.21.3"
weasyprint = "59.0"
noteshrink = { git = "https://github.com/zeshuaro/noteshrink" }
pdf-diff = { git = "https://github.com/zeshuaro/pdf-diff" }
langdetect = "1.0.9"
loguru = "0.7.0"
sentry-sdk = "1.26.0"
dependency-injector = "4.41.0"
pdfCropMargins = "==2.0.2"
pycryptodome = "3.18.0"
pydantic = { extras = ["dotenv"], version = "==1.10.10" }
pypdf = "3.11.1"
pikepdf = "6.2.8.post1"

[tool.poetry.group.dev.dependencies]
black = "23.3.0"
pytest = "7.4.0"
pytest-cov = "4.1.0"
pre-commit = "==3.3.3"
mypy = "1.4.1"
types-requests = "2.31.0.1"
pytest-asyncio = "0.21.0"
ruff = "==0.0.275"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.ruff]
line-length = 100
select = ["ALL"]
ignore = [
    "ANN101", # MissingTypeSelf
    "ANN102", # MissingTypeCls
    "ANN401", # DynamicallyTypedExpression
    "COM812", # trailing-comma-missing
    "FBT",    # flake8-boolean-trap
    "PD",     # pandas-vet
    "S603",   # subprocess-without-shell-equals-true

    # D10* rules are all related to missing docstring
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
]

[tool.ruff.per-file-ignores]
"pdf_bot/language/language_service.py" = [
    "RUF001", # AmbiguousUnicodeCharacterString
]
"tests/pdf_processor/test_abstract_pdf_select_and_text_processor.py" = [
    "SLF001", # private-member-access
]
"tests/pdf_processor/test_abstract_pdf_text_input_processor.py" = [
    "SLF001", # private-member-access
]
"tests/**/*.py" = [
    "S101",    # AssertUsed
    "S105",    # HardcodedPasswordString
    "PLR2004", # magic-value-comparison
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
show_error_codes = true

disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

plugins = ['pydantic.mypy']

[[tool.mypy.overrides]]
module = ['pdf_bot.log.*']
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    'weasyprint.*',
    'langdetect.*',
    'img2pdf.*',
    'pdf2image.*',
    'pdf_diff.*',
    'noteshrink.*',
    'google.*',
    'pdfCropMargins.*',
]
ignore_missing_imports = true

[tool.coverage.run]
relative_files = true
branch = true
source = ["pdf_bot"]
omit = ['pdf_bot/__main__.py', 'pdf_bot/log/*', "tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]
