[tool.poetry]
name = "pdf-bot"
version = "1.0.0"
description = "Telegram bot that can do a lot of things related to PDF files."
authors = ["zeshuaro <zeshuaro@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.10"
Babel = "2.11.0"
google-cloud-datastore = "2.12.0"
humanize = "4.4.0"
img2pdf = "0.4.4"
ocrmypdf = "14.0.2"
pdf2image = "==1.16.2"
"pdfminer.six" = "20221105"
python-telegram-bot = { extras = [
    "callback-data",
    "rate-limiter",
    "webhooks",
], version = "==20.0" }
Pillow = "==9.4.0"
PyPDF2 = "2.12.1"
requests = "2.28.2"
slack-sdk = "3.19.5"
weasyprint = "57.2"
noteshrink = { git = "https://github.com/zeshuaro/noteshrink" }
pdf-diff = { git = "https://github.com/zeshuaro/pdf-diff" }
langdetect = "1.0.9"
loguru = "0.6.0"
sentry-sdk = "1.12.1"
dependency-injector = "4.41.0"
pdfCropMargins = "==1.1.11"
pycryptodome = "3.16.0"
pydantic = { extras = ["dotenv"], version = "==1.10.4" }

[tool.poetry.group.dev.dependencies]
black = "22.12.0"
pytest = "7.2.0"
pytest-cov = "4.0.0"
pre-commit = "==2.21.0"
mypy = "0.991"
types-requests = "2.28.11.7"
pytest-asyncio = "0.20.3"
ruff = "==0.0.215"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.ruff]
line-length = 100
select = ["ALL"]
ignore = [
    # D10* rules are all related to missing docstring
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "ANN101", # MissingTypeSelf
    "ANN102", # MissingTypeCls
    "ANN401", # DynamicallyTypedExpression,
    "FBT",    # flake8-boolean-trap
    "EM",     # flake8-errmsg
    "PT011",  # RaisesTooBroad
    "PT023",  # IncorrectMarkParenthesesStyle
    "PD",     # pandas-vet
    "PGH",    # pygrep-hooks
]
extend-ignore = [
    # D* are rules for Google docstring convention
    "D203",
    "D204",
    "D213",
    "D215",
    "D400",
    "D404",
    "D406",
    "D407",
    "D408",
    "D409",
    "D413",
]

[tool.ruff.per-file-ignores]
"main.py" = [
    "S104", # HardcodedBindAllInterfaces
]
"pdf_bot/language/language_service.py" = [
    "RUF001", # AmbiguousUnicodeCharacterString
]
"tests/**/*.py" = [
    "S101", # AssertUsed
    "S105", # HardcodedPasswordString
]

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
show_error_codes = true

disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ['pdf_bot.log.*']
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    'weasyprint.*',
    'langdetect.*',
    'img2pdf.*',
    'pdf2image.*',
    'pdf_diff.*',
    'noteshrink.*',
    'google.*',
    'pdfCropMargins.*',
]
ignore_missing_imports = true

[tool.coverage.run]
relative_files = true
branch = true
source = ["pdf_bot"]
omit = ["tests/*", 'pdf_bot/log/*']

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "@abstractmethod",
]
