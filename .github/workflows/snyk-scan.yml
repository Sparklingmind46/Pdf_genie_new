name: Snyk Scan

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: "0 8 * * *"

jobs:
  scan:
    name: Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Snyk 🐕
        uses: snyk/actions/setup@master

      - name: Setup Python 🐍
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"

      - name: Install Poetry 📦
        uses: snok/install-poetry@v1.3.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache virtual environment 💾
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies ⚙️
        run: poetry install --no-root --no-interaction

      - name: Run Snyk to check for vulnerabilities 🛡️
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning 📡
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
