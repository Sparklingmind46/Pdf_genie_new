name: GitHub Actions

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install Poetry 📦
        run: pipx install poetry

      - name: Setup Python 🐍
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.4"
          cache: poetry

      - name: Install dependencies ⚙️
        run: poetry install --no-interaction

      - name: Run Tests 🧪
        run: |
          poetry run pybabel compile -D pdf_bot -d locale
          poetry run pytest --cov=pdf_bot --cov-report=xml

      - name: Upload coverage report 📡
        uses: codecov/codecov-action@v3.1.0
        with:
          files: ./coverage.xml

  test-image:
    name: Test Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Test image 🧪
        run: docker build .

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install Poetry 📦
        run: pipx install poetry

      - name: Setup Python 🐍
        uses: actions/setup-python@v3
        with:
          python-version: "3.10.4"
          cache: poetry

      - name: Install dependencies ⚙️
        run: poetry install --no-interaction --no-root

      - name: Run linting 🧪
        run: |
          poetry run black --check --diff main.py pdf_bot
          poetry run isort --check --diff main.py pdf_bot
          poetry run pylint main.py pdf_bot

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test-image, lint]
    if: ${{ github.ref == 'refs/heads/master' }}
    concurrency: production
    environment:
      name: Production
    env:
      DOCKER_IMAGE: registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY }}/${{ secrets.DIGITALOCEAN_APP_NAME }}:${{ github.sha }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Install doctl 🌊
        uses: digitalocean/action-doctl@v2.1.1
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: Authenticate to DigitalOcean 🔐
        run: doctl registry login --expiry-seconds 600

      - name: Build and push image 🏗
        run: |-
          docker build -t ${{ env.DOCKER_IMAGE }} .
          docker push ${{ env.DOCKER_IMAGE }}

      - name: Deploy 🚀
        uses: digitalocean/app_action@v1.1.2
        with:
          app_name: ${{ secrets.DIGITALOCEAN_APP_NAME }}
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}
          images: '[
            {
            "name": "${{ secrets.DIGITALOCEAN_APP_NAME }}",
            "image": {
            "registry_type": "DOCR",
            "repository": "${{ secrets.DIGITALOCEAN_APP_NAME }}",
            "tag": "${{ github.sha }}"
            }
            }
            ]'
