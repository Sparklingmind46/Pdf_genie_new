name: GitHub Actions

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Setup Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: "3.9.7"

      - name: Install Poetry 📦
        uses: snok/install-poetry@v1.3.0
        with:
          version: 1.1.12
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache Poetry 💾
        uses: actions/cache@v2
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install dependencies ⚙️
        run: poetry install --no-interaction --no-root

      - name: Run linting 🧪
        run: |
          source .venv/bin/activate
          pre-commit run --all-files

  deploy-stg:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [lint]
    if: ${{ github.ref == 'refs/heads/master' }}
    environment:
      name: Staging
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Setup GCloud ⚙️
        uses: google-github-actions/setup-gcloud@master
        with:
          version: "349.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Build 🏗
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA"

      - name: Deploy 🚀
        uses: google-github-actions/deploy-cloudrun@main
        with:
          service: ${{ env.SERVICE_NAME }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.SHA }}
          region: ${{ secrets.GCP_REGION }}
